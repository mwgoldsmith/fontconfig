<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|Win32">
      <Configuration>DebugDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|Win32">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugDLL|x64">
      <Configuration>DebugDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseDLL|x64">
      <Configuration>ReleaseDLL</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{92CDD15A-E89F-4724-AB56-54C097F1D6A1}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>fontconfig</RootNamespace>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v140</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <TargetName>lib$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <TargetName>lib$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <TargetName>lib$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <TargetName>lib$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <TargetName>$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <TargetName>$(ProjectName)d</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <TargetName>$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <TargetName>$(ProjectName)</TargetName>
    <OutDir Condition="'$(ConfigurationType)'=='StaticLibrary'">$(ProjectDir)..\..\..\..\build\msvc\lib\$(PlatformTarget)\</OutDir>
    <OutDir Condition="'$(ConfigurationType)'=='DynamicLibrary'">$(ProjectDir)..\..\..\..\build\msvc\bin\$(PlatformTarget)\</OutDir>
    <IntDir>$(OutDir)..\..\obj\$(PlatformTarget)\$(Configuration)\$(ConfigurationType)\$(ProjectName)\</IntDir>
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;LIBXML_STATIC;_WINDOWS;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libfreetyped.lib;libxml2d.lib;libiconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <PreprocessorDefinitions>HAVE_CONFIG_H;LIBXML_STATIC;_WINDOWS;WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libfreetyped.lib;libxml2d.lib;libiconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;LIBXML_STATIC;_WINDOWS;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <TargetMachine>MachineX86</TargetMachine>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libfreetype.lib;libxml2.lib;libiconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;LIBXML_STATIC;_WINDOWS;WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
    </ClCompile>
    <Lib>
      <SubSystem>Windows</SubSystem>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>libfreetype.lib;libxml2.lib;libiconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Lib>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_DEBUG;_WINDOWS;_USRDLL;WIN32;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <DisableSpecificWarnings>4996;4090;4018;4267;4244</DisableSpecificWarnings>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <ExceptionHandling>false</ExceptionHandling>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>freetyped.lib;xml2d.lib;iconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <DisableSpecificWarnings>4996;4090;4018;4267;4244</DisableSpecificWarnings>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <ExceptionHandling>false</ExceptionHandling>
      <ModuleDefinitionFile>libfontconfig.def</ModuleDefinitionFile>
      <AdditionalOptions>/IGNORE:4006 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;_DEBUG;_WINDOWS;_USRDLL;WIN32;DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <DisableSpecificWarnings>4996;4090;4018;4267;4244</DisableSpecificWarnings>
      <ExceptionHandling>false</ExceptionHandling>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>freetyped.lib;xml2d.lib;iconvd.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ModuleDefinitionFile>libfontconfig.def</ModuleDefinitionFile>
      <AdditionalOptions>/IGNORE:4006 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;WIN32;NDEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <DisableSpecificWarnings>4996;4090;4018;4267;4244</DisableSpecificWarnings>
      <EnableEnhancedInstructionSet>StreamingSIMDExtensions2</EnableEnhancedInstructionSet>
      <ExceptionHandling>false</ExceptionHandling>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>freetype.lib;xml2.lib;iconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <LargeAddressAware>true</LargeAddressAware>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ModuleDefinitionFile>libfontconfig.def</ModuleDefinitionFile>
      <AdditionalOptions>/IGNORE:4006 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
    <ClCompile>
      <PrecompiledHeader />
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir);$(ProjectDir)src;$(ProjectDir)..\..\src;$(ProjectDir)..\..;$(ProjectDir)..\..\include;$(OutDir)..\..\include\freetype2;$(OutDir)..\..\include\xml2;$(OutDir)..\..\include\iconv;$(OutDir)..\..\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ProgramDataBaseFileName>$(IntDir)$(TargetName).pdb</ProgramDataBaseFileName>
      <PreprocessorDefinitions>HAVE_CONFIG_H;NDEBUG;_WINDOWS;_USRDLL;WIN32;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <BrowseInformationFile>$(IntDir)bsc\</BrowseInformationFile>
      <BrowseInformation>true</BrowseInformation>
      <DisableSpecificWarnings>4996;4090;4018;4267;4244</DisableSpecificWarnings>
      <ExceptionHandling>false</ExceptionHandling>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>DebugFastLink</GenerateDebugInformation>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ImportLibrary>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).lib</ImportLibrary>
      <ProfileGuidedDatabase>$(IntDir)$(TargetName).pgd</ProfileGuidedDatabase>
      <ProgramDatabaseFile>$(OutDir)..\..\lib\$(PlatformTarget)\$(TargetName).pdb</ProgramDatabaseFile>
      <AdditionalLibraryDirectories>$(OutDir)..\..\lib\$(PlatformTarget)\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>freetype.lib;xml2.lib;iconv.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ModuleDefinitionFile>libfontconfig.def</ModuleDefinitionFile>
      <AdditionalOptions>/IGNORE:4006 %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <Bscmake>
      <PreserveSbr>true</PreserveSbr>
    </Bscmake>
    <PreBuildEvent>
      <Command>IF EXIST "$(ProjectDir)..\..\config.h" (
  DEL "$(ProjectDir)..\..\config.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcalias.h" (
  DEL "$(ProjectDir)..\..\src\fcalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcaliastail.h" (
  DEL "$(ProjectDir)..\ ..\src\fcaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftalias.h" (
  DEL "$(ProjectDir)..\..\src\fcftalias.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcftaliastail.h" (
  DEL "$(ProjectDir)..\..\src\fcftaliastail.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcobjshash.h" (
  DEL "$(ProjectDir)..\..\src\fcobjshash.h"
)
IF EXIST "$(ProjectDir)..\..\src\fcstdint.h" (
  DEL "$(ProjectDir)..\..\src\fcstdint.h"
)
IF EXIST "$(ProjectDir)..\..\fc-case\fccase.h" (
  DEL "$(ProjectDir)..\..\fc-case\fccase.h"
)
IF EXIST "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h" (
  DEL "$(ProjectDir)..\..\fc-glyphname\fcglyphname.h"
)
IF EXIST "$(ProjectDir)..\..\fc-lang\fclang.h" (
  DEL "$(ProjectDir)..\..\fc-lang\fclang.h"
)
IF EXIST "$(OutDir)..\..\include\fontconfig" (
  RD /s /q "$(OutDir)..\..\include\fontconfig"
)
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>mkdir "$(OutDir)..\..\include"
mkdir "$(OutDir)..\..\include\$(ProjectName)"
copy "$(ProjectDir)..\..\fontconfig\*.h" "$(OutDir)..\..\include\$(ProjectName)"
mkdir "$(OutDir)..\..\licenses"
copy "$(ProjectDir)..\..\COPYING" "$(OutDir)..\..\licenses\$(ProjectName).txt"
mkdir "$(OutDir)..\..\fonts"
copy "$(ProjectDir)fonts.conf" "$(OutDir)..\..\fonts"
mkdir "$(OutDir)..\..\fonts\conf.d"
copy "$(ProjectDir)..\..\conf.d\*.conf" "$(OutDir)..\..\fonts\conf.d\"</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="config.h" />
    <ClInclude Include="dirent.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\src\fcatomic.c" />
    <ClCompile Include="..\..\src\fcblanks.c" />
    <ClCompile Include="..\..\src\fccache.c" />
    <ClCompile Include="..\..\src\fccfg.c" />
    <ClCompile Include="..\..\src\fccharset.c" />
    <ClCompile Include="..\..\src\fcdbg.c" />
    <ClCompile Include="..\..\src\fcdefault.c" />
    <ClCompile Include="..\..\src\fcdir.c" />
    <ClCompile Include="..\..\src\fcformat.c" />
    <ClCompile Include="..\..\src\fcfreetype.c" />
    <ClCompile Include="..\..\src\fcfs.c" />
    <ClCompile Include="..\..\src\fcinit.c" />
    <ClCompile Include="..\..\src\fclang.c" />
    <ClCompile Include="..\..\src\fclist.c" />
    <ClCompile Include="..\..\src\fcmatch.c" />
    <ClCompile Include="..\..\src\fcmatrix.c" />
    <ClCompile Include="..\..\src\fcname.c" />
    <ClCompile Include="..\..\src\fcpat.c" />
    <ClCompile Include="..\..\src\fcserialize.c" />
    <ClCompile Include="..\..\src\fcstr.c" />
    <ClCompile Include="..\..\src\fcstat.c" />
    <ClCompile Include="..\..\src\fcxml.c" />
    <ClCompile Include="..\..\src\ftglue.c" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>